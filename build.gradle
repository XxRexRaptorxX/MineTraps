plugins {
	id 'fabric-loom' version '1.7.2'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group
mod_name = project.mod_name
fabric_version_range = project.fabric_version_range
mc_version_range = project.mc_version_range
java_version_range = project.java_version_range

base {
	archivesName = project.mod_id
}

repositories {
	maven {
		// location of the maven that hosts JEI files since January 2023
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}

	// curse maven
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven { url "https://maven.terraformersmc.com/releases/"}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// compile against the JEI API but do not include it at runtime
	modCompileOnlyApi("mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}")
	modCompileOnlyApi("mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}")
	// at runtime, use the full JEI jar for Fabric
	modRuntimeOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}")

	//other dependencies
	modImplementation "curse.maven:jade-324717:${project.jade_version}"
	modImplementation "com.terraformersmc:modmenu:7.0.1"
	
}

processResources {
	inputs.property "mod_version", version
	inputs.property "mod_name", mod_name
	inputs.property "mod_id", mod_id
	inputs.property "fabric_version_range", fabric_version_range
	inputs.property "mc_version_range", mc_version_range
	inputs.property "java_version_range", java_version_range

	filesMatching("fabric.mod.json") {
		expand "mod_version": version, "mod_id": mod_id, "mod_name": mod_name, "fabric_version_range": fabric_version_range,
				"mc_version_range": mc_version_range, "java_version_range": java_version_range
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE.txt") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.mod_id
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
//Dummy task to fix post sync error caused by NeoGradle
tasks.register("idePostSync") {
}

